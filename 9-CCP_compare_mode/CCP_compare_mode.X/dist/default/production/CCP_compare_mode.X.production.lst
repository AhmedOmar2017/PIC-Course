

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Aug 02 04:03:47 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0015                     _CCPR1	set	21
   170  000E                     _TMR1	set	14
   171  0062                     _CCP1IF	set	98
   172  005F                     _GIE	set	95
   173  005E                     _PEIE	set	94
   174  00BB                     _CCP1M3	set	187
   175  00BA                     _CCP1M2	set	186
   176  00B9                     _CCP1M1	set	185
   177  00B8                     _CCP1M0	set	184
   178  0080                     _TMR1ON	set	128
   179  0081                     _TMR1CS	set	129
   180  0085                     _T1CKPS1	set	133
   181  0084                     _T1CKPS0	set	132
   182  003C                     _RC4	set	60
   183  0462                     _CCP1IE	set	1122
   184  043C                     _TRISC4	set	1084
   185                           
   186                           	psect	cinit
   187  000F                     start_initialization:	
   188                           ; #config settings
   189                           
   190  000F                     __initialization:
   191                           
   192                           ; Clear objects allocated to COMMON
   193  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   194  0010                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197  0010                     __end_of__initialization:
   198  0010  0183               	clrf	3
   199  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMMON
   202  0073                     __pbssCOMMON:
   203  0073                     _x:
   204  0073                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207  0070                     __pcstackCOMMON:
   208  0070                     ?_main:
   209  0070                     ?_ISR:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ??_ISR:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217  0070                     	ds	3
   218  0073                     ??_main:
   219                           
   220                           	psect	maintext
   221  0014                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 17 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		status,2
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255  0014                     _main:	
   256                           ;psect for function _main
   257                           
   258  0014                     l641:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [status,2]
   261                           
   262                           
   263                           ;main.c: 20:     TRISC4 = 0;
   264  0014  1683               	bsf	3,5	;RP0=1, select bank1
   265  0015  1303               	bcf	3,6	;RP1=0, select bank1
   266  0016  1207               	bcf	7,4	;volatile
   267                           
   268                           ;main.c: 21:     RC4 = 0;
   269  0017  1283               	bcf	3,5	;RP0=0, select bank0
   270  0018  1303               	bcf	3,6	;RP1=0, select bank0
   271  0019  1207               	bcf	7,4	;volatile
   272  001A                     l643:
   273                           
   274                           ;main.c: 24:     TMR1 = 0;
   275  001A  018E               	clrf	14	;volatile
   276  001B  018F               	clrf	15	;volatile
   277  001C                     l645:
   278                           
   279                           ;main.c: 25:     T1CKPS0 = 0;
   280  001C  1210               	bcf	16,4	;volatile
   281  001D                     l647:
   282                           
   283                           ;main.c: 26:     T1CKPS1 = 0;
   284  001D  1290               	bcf	16,5	;volatile
   285  001E                     l649:
   286                           
   287                           ;main.c: 27:     TMR1CS = 0;
   288  001E  1090               	bcf	16,1	;volatile
   289  001F                     l651:
   290                           
   291                           ;main.c: 28:     TMR1ON = 1;
   292  001F  1410               	bsf	16,0	;volatile
   293  0020                     l653:
   294                           
   295                           ;main.c: 31:     CCPR1 = 50000;
   296  0020  30C3               	movlw	195
   297  0021  0096               	movwf	22	;volatile
   298  0022  3050               	movlw	80
   299  0023  0095               	movwf	21	;volatile
   300  0024                     l655:
   301                           
   302                           ;main.c: 34:     CCP1M0 = 1;
   303  0024  1417               	bsf	23,0	;volatile
   304  0025                     l657:
   305                           
   306                           ;main.c: 35:     CCP1M1 = 1;
   307  0025  1497               	bsf	23,1	;volatile
   308  0026                     l659:
   309                           
   310                           ;main.c: 36:     CCP1M2 = 0;
   311  0026  1117               	bcf	23,2	;volatile
   312  0027                     l661:
   313                           
   314                           ;main.c: 37:     CCP1M3 = 1;
   315  0027  1597               	bsf	23,3	;volatile
   316  0028                     l663:
   317                           
   318                           ;main.c: 40:     CCP1IE = 1;
   319  0028  1683               	bsf	3,5	;RP0=1, select bank1
   320  0029  1303               	bcf	3,6	;RP1=0, select bank1
   321  002A  150C               	bsf	12,2	;volatile
   322  002B                     l665:
   323                           
   324                           ;main.c: 41:     PEIE = 1;
   325  002B  170B               	bsf	11,6	;volatile
   326  002C                     l667:
   327                           
   328                           ;main.c: 42:     GIE = 1;
   329  002C  178B               	bsf	11,7	;volatile
   330  002D                     l39:	
   331                           ;main.c: 45:     while(1)
   332                           
   333  002D                     l40:	
   334                           ;main.c: 46:     {;main.c: 48:     }
   335                           
   336  002D  282D               	goto	l39
   337  002E  120A  118A  280C   	ljmp	start
   338  0031                     __end_of_main:
   339                           
   340                           	psect	text1
   341  0031                     __ptext1:	
   342 ;; *************** function _ISR *****************
   343 ;; Defined at:
   344 ;;		line 52 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0
   360 ;;      Temps:          3       0       0       0       0
   361 ;;      Totals:         3       0       0       0       0
   362 ;;Total ram usage:        3 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		Interrupt level 1
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371  0031                     _ISR:	
   372                           ;psect for function _ISR
   373                           
   374  0031                     i1l669:
   375                           
   376                           ;main.c: 54:     if(CCP1IF)
   377  0031  1283               	bcf	3,5	;RP0=0, select bank0
   378  0032  1303               	bcf	3,6	;RP1=0, select bank0
   379  0033  1D0C               	btfss	12,2	;volatile
   380  0034  2836               	goto	u1_21
   381  0035  2837               	goto	u1_20
   382  0036                     u1_21:
   383  0036  2845               	goto	i1l49
   384  0037                     u1_20:
   385  0037                     i1l671:
   386                           
   387                           ;main.c: 55:     {;main.c: 56:         x++;
   388  0037  3001               	movlw	1
   389  0038  00F0               	movwf	??_ISR
   390  0039  0870               	movf	??_ISR,w
   391  003A  07F3               	addwf	_x,f
   392                           
   393                           ;main.c: 57:         if(x == 10)
   394  003B  300A               	movlw	10
   395  003C  0673               	xorwf	_x,w
   396  003D  1D03               	btfss	3,2
   397  003E  2840               	goto	u2_21
   398  003F  2841               	goto	u2_20
   399  0040                     u2_21:
   400  0040  2844               	goto	i1l677
   401  0041                     u2_20:
   402  0041                     i1l673:
   403                           
   404                           ;main.c: 58:         {;main.c: 60:             RC4 = ~RC4;
   405  0041  3010               	movlw	16
   406  0042  0687               	xorwf	7,f
   407  0043                     i1l675:
   408                           
   409                           ;main.c: 61:             x = 0;
   410  0043  01F3               	clrf	_x
   411  0044                     i1l677:
   412                           
   413                           ;main.c: 64:         CCP1IF = 0;
   414  0044  110C               	bcf	12,2	;volatile
   415  0045                     i1l49:
   416  0045  0872               	movf	??_ISR+2,w
   417  0046  008A               	movwf	10
   418  0047  0E71               	swapf	??_ISR+1,w
   419  0048  0083               	movwf	3
   420  0049  0EFE               	swapf	btemp,f
   421  004A  0E7E               	swapf	btemp,w
   422  004B  0009               	retfie
   423  004C                     __end_of_ISR:
   424  007E                     btemp	set	126	;btemp
   425  007E                     wtemp0	set	126
   426                           
   427                           	psect	intentry
   428  0004                     __pintentry:	
   429                           ;incstack = 0
   430                           ; Regs used in _ISR: [wreg+status,2+status,0]
   431                           
   432  0004                     interrupt_function:
   433  007E                     saved_w	set	btemp
   434  0004  00FE               	movwf	btemp
   435  0005  0E03               	swapf	3,w
   436  0006  00F1               	movwf	??_ISR+1
   437  0007  080A               	movf	10,w
   438  0008  00F2               	movwf	??_ISR+2
   439  0009  120A  118A  2831   	ljmp	_ISR
   440                           
   441                           	psect	idloc
   442                           
   443                           ;Config register IDLOC0 @ 0x2000
   444                           ;	unspecified, using default values
   445  2000                     	org	8192
   446  2000  3FFF               	dw	16383
   447                           
   448                           ;Config register IDLOC1 @ 0x2001
   449                           ;	unspecified, using default values
   450  2001                     	org	8193
   451  2001  3FFF               	dw	16383
   452                           
   453                           ;Config register IDLOC2 @ 0x2002
   454                           ;	unspecified, using default values
   455  2002                     	org	8194
   456  2002  3FFF               	dw	16383
   457                           
   458                           ;Config register IDLOC3 @ 0x2003
   459                           ;	unspecified, using default values
   460  2003                     	org	8195
   461  2003  3FFF               	dw	16383
   462                           
   463                           	psect	config
   464                           
   465                           ;Config register CONFIG @ 0x2007
   466                           ;	Oscillator Selection bits
   467                           ;	FOSC = XT, XT oscillator
   468                           ;	Watchdog Timer Enable bit
   469                           ;	WDTE = OFF, WDT disabled
   470                           ;	Power-up Timer Enable bit
   471                           ;	PWRTE = ON, PWRT enabled
   472                           ;	Brown-out Reset Enable bit
   473                           ;	BOREN = ON, BOR enabled
   474                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   475                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   476                           ;	Data EEPROM Memory Code Protection bit
   477                           ;	CPD = OFF, Data EEPROM code protection off
   478                           ;	Flash Program Memory Write Enable bits
   479                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   480                           ;	In-Circuit Debugger Mode bit
   481                           ;	DEBUG = 0x1, unprogrammed default
   482                           ;	Flash Program Memory Code Protection bit
   483                           ;	CP = OFF, Code protection off
   484  2007                     	org	8199
   485  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Aug 02 04:03:47 2022

                      _x 0073                       l40 002D                       l39 002D  
                    l641 0014                      l651 001F                      l643 001A  
                    l661 0027                      l653 0020                      l645 001C  
                    l663 0028                      l655 0024                      l647 001D  
                    l665 002B                      l657 0025                      l649 001E  
                    l667 002C                      l659 0026                      _GIE 005F  
                    _RC4 003C                      _ISR 0031                     ?_ISR 0070  
                   _PEIE 005E                     i1l49 0045                     _TMR1 000E  
                   u1_20 0037                     u1_21 0036                     u2_20 0041  
                   u2_21 0040                     _main 0014                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _CCPR1 0015                    i1l671 0037                    i1l673 0041  
                  i1l675 0043                    i1l677 0044                    i1l669 0031  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0031                   ??_main 0073  
                 _CCP1M0 00B8                   _CCP1M1 00B9                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCP1IE 0462                   _CCP1IF 0062  
                 _TMR1CS 0081                   _TMR1ON 0080                   _TRISC4 043C  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0014               __pintentry 0004                  _T1CKPS0 0084  
                _T1CKPS1 0085                  __ptext1 0031     end_of_initialization 0010  
    start_initialization 000F              __end_of_ISR 004C              __pbssCOMMON 0073  
              ___latbits 0002        interrupt_function 0004                 intlevel1 0000  
