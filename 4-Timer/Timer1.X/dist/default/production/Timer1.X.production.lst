

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Aug 01 02:51:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  000E                     _TMR1	set	14
   170  0060                     _TMR1IF	set	96
   171  0080                     _TMR1ON	set	128
   172  0085                     _T1CKPS1	set	133
   173  0084                     _T1CKPS0	set	132
   174  0081                     _TMR1CS	set	129
   175  005F                     _GIE	set	95
   176  005E                     _PEIE	set	94
   177  0030                     _RB0	set	48
   178  0460                     _TMR1IE	set	1120
   179  0430                     _TRISB0	set	1072
   180                           
   181                           	psect	cinit
   182  000F                     start_initialization:	
   183                           ; #config settings
   184                           
   185  000F                     __initialization:
   186                           
   187                           ; Clear objects allocated to COMMON
   188  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   189  0010                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  0010                     __end_of__initialization:
   193  0010  0183               	clrf	3
   194  0011  120A  118A  2833   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197  0073                     __pbssCOMMON:
   198  0073                     _count:
   199  0073                     	ds	1
   200                           
   201                           	psect	cstackCOMMON
   202  0070                     __pcstackCOMMON:
   203  0070                     ?_main:
   204  0070                     ?_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ??_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212  0070                     	ds	3
   213  0073                     ??_main:
   214                           
   215                           	psect	maintext
   216  0033                     __pmaintext:	
   217                           ; 1 bytes @ 0x3
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 18 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		status,2
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250  0033                     _main:	
   251                           ;psect for function _main
   252                           
   253  0033                     l631:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: [status,2]
   256                           
   257                           
   258                           ;main.c: 21:     TRISB0 = 0;
   259  0033  1683               	bsf	3,5	;RP0=1, select bank1
   260  0034  1303               	bcf	3,6	;RP1=0, select bank1
   261  0035  1006               	bcf	6,0	;volatile
   262                           
   263                           ;main.c: 23:     RB0 = 0;
   264  0036  1283               	bcf	3,5	;RP0=0, select bank0
   265  0037  1303               	bcf	3,6	;RP1=0, select bank0
   266  0038  1006               	bcf	6,0	;volatile
   267                           
   268                           ;main.c: 25:     TMR1IE = 1;
   269  0039  1683               	bsf	3,5	;RP0=1, select bank1
   270  003A  1303               	bcf	3,6	;RP1=0, select bank1
   271  003B  140C               	bsf	12,0	;volatile
   272                           
   273                           ;main.c: 26:     PEIE = 1;
   274  003C  170B               	bsf	11,6	;volatile
   275                           
   276                           ;main.c: 27:     GIE = 1;
   277  003D  178B               	bsf	11,7	;volatile
   278  003E                     l633:
   279                           
   280                           ;main.c: 31:     TMR1 = 0;
   281  003E  1283               	bcf	3,5	;RP0=0, select bank0
   282  003F  1303               	bcf	3,6	;RP1=0, select bank0
   283  0040  018E               	clrf	14	;volatile
   284  0041  018F               	clrf	15	;volatile
   285  0042                     l635:
   286                           
   287                           ;main.c: 33:     TMR1 = 15536;
   288  0042  303C               	movlw	60
   289  0043  008F               	movwf	15	;volatile
   290  0044  30B0               	movlw	176
   291  0045  008E               	movwf	14	;volatile
   292  0046                     l637:
   293                           
   294                           ;main.c: 35:     TMR1CS = 0;
   295  0046  1090               	bcf	16,1	;volatile
   296  0047                     l639:
   297                           
   298                           ;main.c: 37:     T1CKPS0 = 0;
   299  0047  1210               	bcf	16,4	;volatile
   300  0048                     l641:
   301                           
   302                           ;main.c: 38:     T1CKPS1 = 0;
   303  0048  1290               	bcf	16,5	;volatile
   304  0049                     l643:
   305                           
   306                           ;main.c: 40:     TMR1ON = 1;
   307  0049  1410               	bsf	16,0	;volatile
   308  004A                     l29:	
   309                           ;main.c: 42:     while(1)
   310                           
   311  004A                     l30:	
   312                           ;main.c: 43:     {;main.c: 44:     }
   313                           
   314  004A  284A               	goto	l29
   315  004B  120A  118A  280C   	ljmp	start
   316  004E                     __end_of_main:
   317                           
   318                           	psect	text1
   319  0014                     __ptext1:	
   320 ;; *************** function _ISR *****************
   321 ;; Defined at:
   322 ;;		line 48 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   336 ;;      Params:         0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0
   338 ;;      Temps:          3       0       0       0       0
   339 ;;      Totals:         3       0       0       0       0
   340 ;;Total ram usage:        3 bytes
   341 ;; Hardware stack levels used: 1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		Interrupt level 1
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349  0014                     _ISR:	
   350                           ;psect for function _ISR
   351                           
   352  0014                     i1l645:
   353                           
   354                           ;main.c: 50:     if(TMR1IF)
   355  0014  1283               	bcf	3,5	;RP0=0, select bank0
   356  0015  1303               	bcf	3,6	;RP1=0, select bank0
   357  0016  1C0C               	btfss	12,0	;volatile
   358  0017  2819               	goto	u1_21
   359  0018  281A               	goto	u1_20
   360  0019                     u1_21:
   361  0019  282C               	goto	i1l39
   362  001A                     u1_20:
   363  001A                     i1l647:
   364                           
   365                           ;main.c: 51:     {;main.c: 52:         TMR1 = 15536;
   366  001A  303C               	movlw	60
   367  001B  008F               	movwf	15	;volatile
   368  001C  30B0               	movlw	176
   369  001D  008E               	movwf	14	;volatile
   370  001E                     i1l649:
   371                           
   372                           ;main.c: 53:         count++;
   373  001E  3001               	movlw	1
   374  001F  00F0               	movwf	??_ISR
   375  0020  0870               	movf	??_ISR,w
   376  0021  07F3               	addwf	_count,f
   377                           
   378                           ;main.c: 54:         if (count == 20)
   379  0022  3014               	movlw	20
   380  0023  0673               	xorwf	_count,w
   381  0024  1D03               	btfss	3,2
   382  0025  2827               	goto	u2_21
   383  0026  2828               	goto	u2_20
   384  0027                     u2_21:
   385  0027  282B               	goto	i1l655
   386  0028                     u2_20:
   387  0028                     i1l651:
   388                           
   389                           ;main.c: 55:         {;main.c: 56:             RB0 = ~RB0;
   390  0028  3001               	movlw	1
   391  0029  0686               	xorwf	6,f
   392  002A                     i1l653:
   393                           
   394                           ;main.c: 57:             count = 0;
   395  002A  01F3               	clrf	_count
   396  002B                     i1l655:
   397                           
   398                           ;main.c: 59:         TMR1IF = 0;
   399  002B  100C               	bcf	12,0	;volatile
   400  002C                     i1l39:
   401  002C  0872               	movf	??_ISR+2,w
   402  002D  008A               	movwf	10
   403  002E  0E71               	swapf	??_ISR+1,w
   404  002F  0083               	movwf	3
   405  0030  0EFE               	swapf	btemp,f
   406  0031  0E7E               	swapf	btemp,w
   407  0032  0009               	retfie
   408  0033                     __end_of_ISR:
   409  007E                     btemp	set	126	;btemp
   410  007E                     wtemp0	set	126
   411                           
   412                           	psect	intentry
   413  0004                     __pintentry:	
   414                           ;incstack = 0
   415                           ; Regs used in _ISR: [wreg+status,2+status,0]
   416                           
   417  0004                     interrupt_function:
   418  007E                     saved_w	set	btemp
   419  0004  00FE               	movwf	btemp
   420  0005  0E03               	swapf	3,w
   421  0006  00F1               	movwf	??_ISR+1
   422  0007  080A               	movf	10,w
   423  0008  00F2               	movwf	??_ISR+2
   424  0009  120A  118A  2814   	ljmp	_ISR
   425                           
   426                           	psect	idloc
   427                           
   428                           ;Config register IDLOC0 @ 0x2000
   429                           ;	unspecified, using default values
   430  2000                     	org	8192
   431  2000  3FFF               	dw	16383
   432                           
   433                           ;Config register IDLOC1 @ 0x2001
   434                           ;	unspecified, using default values
   435  2001                     	org	8193
   436  2001  3FFF               	dw	16383
   437                           
   438                           ;Config register IDLOC2 @ 0x2002
   439                           ;	unspecified, using default values
   440  2002                     	org	8194
   441  2002  3FFF               	dw	16383
   442                           
   443                           ;Config register IDLOC3 @ 0x2003
   444                           ;	unspecified, using default values
   445  2003                     	org	8195
   446  2003  3FFF               	dw	16383
   447                           
   448                           	psect	config
   449                           
   450                           ;Config register CONFIG @ 0x2007
   451                           ;	Oscillator Selection bits
   452                           ;	FOSC = XT, XT oscillator
   453                           ;	Watchdog Timer Enable bit
   454                           ;	WDTE = OFF, WDT disabled
   455                           ;	Power-up Timer Enable bit
   456                           ;	PWRTE = ON, PWRT enabled
   457                           ;	Brown-out Reset Enable bit
   458                           ;	BOREN = ON, BOR enabled
   459                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   460                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   461                           ;	Data EEPROM Memory Code Protection bit
   462                           ;	CPD = OFF, Data EEPROM code protection off
   463                           ;	Flash Program Memory Write Enable bits
   464                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   465                           ;	In-Circuit Debugger Mode bit
   466                           ;	DEBUG = 0x1, unprogrammed default
   467                           ;	Flash Program Memory Code Protection bit
   468                           ;	CP = OFF, Code protection off
   469  2007                     	org	8199
   470  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Aug 01 02:51:46 2022

                     l30 004A                       l29 004A                      l631 0033  
                    l641 0048                      l633 003E                      l643 0049  
                    l635 0042                      l637 0046                      l639 0047  
                    _GIE 005F                      _RB0 0030                      _ISR 0014  
                   ?_ISR 0070                     _PEIE 005E                     i1l39 002C  
                   _TMR1 000E                     u1_20 001A                     u1_21 0019  
                   u2_20 0028                     u2_21 0027                     _main 0033  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l651 0028                    i1l653 002A  
                  i1l645 0014                    i1l655 002B                    i1l647 001A  
                  i1l649 001E                    _count 0073                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 004E                   ??_main 0073                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
                 _TRISB0 0430                   saved_w 007E  __end_of__initialization 0010  
         __pcstackCOMMON 0070               __pmaintext 0033               __pintentry 0004  
                _T1CKPS0 0084                  _T1CKPS1 0085                  __ptext1 0014  
   end_of_initialization 0010      start_initialization 000F              __end_of_ISR 0033  
            __pbssCOMMON 0073                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000  
