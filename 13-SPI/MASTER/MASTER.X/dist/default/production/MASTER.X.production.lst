

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Aug 22 01:42:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0013                     _SSPBUF	set	19
   169  0008                     _PORTD	set	8
   170  00A4                     _CKP	set	164
   171  00A5                     _SSPEN	set	165
   172  00A3                     _SSPM3	set	163
   173  00A2                     _SSPM2	set	162
   174  00A1                     _SSPM1	set	161
   175  00A0                     _SSPM0	set	160
   176  0032                     _RB2	set	50
   177  0031                     _RB1	set	49
   178  0030                     _RB0	set	48
   179  0088                     _TRISD	set	136
   180  0086                     _TRISB	set	134
   181  043B                     _TRISC3	set	1083
   182  043C                     _TRISC4	set	1084
   183  043D                     _TRISC5	set	1085
   184  04A7                     _SMP	set	1191
   185  04A6                     _CKE	set	1190
   186                           
   187                           	psect	cinit
   188  07FC                     start_initialization:	
   189                           ; #config settings
   190                           
   191  07FC                     __initialization:
   192  07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  07FC                     __end_of__initialization:
   196  07FC  0183               	clrf	3
   197  07FD  120A  118A  2FBE   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:
   201  0070                     ?_SPI_MASTER_INIT:
   202  0070                     ??_SPI_MASTER_INIT:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_SPI_MASTER_WRITE:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ??_SPI_MASTER_WRITE:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     SPI_MASTER_WRITE@data:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219  0070                     	ds	1
   220  0071                     ??_main:
   221                           
   222                           ; 1 bytes @ 0x1
   223  0071                     	ds	3
   224  0074                     main@Data:
   225                           
   226                           ; 1 bytes @ 0x4
   227  0074                     	ds	1
   228                           
   229                           	psect	maintext
   230  07BE                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 29 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;  Data            1    4[COMMON] unsigned char 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         1       0       0       0       0
   252 ;;      Temps:          3       0       0       0       0
   253 ;;      Totals:         4       0       0       0       0
   254 ;;Total ram usage:        4 bytes
   255 ;; Hardware stack levels required when called: 1
   256 ;; This function calls:
   257 ;;		_SPI_MASTER_INIT
   258 ;;		_SPI_MASTER_WRITE
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264  07BE                     _main:	
   265                           ;psect for function _main
   266                           
   267  07BE                     l657:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;main.c: 32:     SPI_MASTER_INIT();
   273  07BE  120A  118A  27AE  120A  118A  	fcall	_SPI_MASTER_INIT
   274  07C3                     l659:
   275                           
   276                           ;main.c: 33:     uint8_t Data = 0;
   277  07C3  01F4               	clrf	main@Data
   278  07C4                     l661:
   279                           
   280                           ;main.c: 34:     TRISB = 0x07;
   281  07C4  3007               	movlw	7
   282  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   283  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   284  07C7  0086               	movwf	6	;volatile
   285  07C8                     l663:
   286                           
   287                           ;main.c: 35:     TRISD = 0x00;
   288  07C8  0188               	clrf	8	;volatile
   289  07C9                     l665:
   290                           
   291                           ;main.c: 36:     PORTD = 0x00;
   292  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   293  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   294  07CB  0188               	clrf	8	;volatile
   295  07CC                     l667:
   296                           
   297                           ;main.c: 40:     {;main.c: 42:         if(RB0)
   298  07CC  1C06               	btfss	6,0	;volatile
   299  07CD  2FCF               	goto	u11
   300  07CE  2FD0               	goto	u10
   301  07CF                     u11:
   302  07CF  2FE2               	goto	l48
   303  07D0                     u10:
   304  07D0                     l669:
   305                           
   306                           ;main.c: 43:         {;main.c: 44:             Data++;
   307  07D0  3001               	movlw	1
   308  07D1  00F1               	movwf	??_main
   309  07D2  0871               	movf	??_main,w
   310  07D3  07F4               	addwf	main@Data,f
   311  07D4                     l671:
   312                           
   313                           ;main.c: 45:             _delay((unsigned long)((250)*(4000000/4000.0)));
   314  07D4  3002               	movlw	2
   315  07D5  00F3               	movwf	??_main+2
   316  07D6  3045               	movlw	69
   317  07D7  00F2               	movwf	??_main+1
   318  07D8  30A9               	movlw	169
   319  07D9  00F1               	movwf	??_main
   320  07DA                     u47:
   321  07DA  0BF1               	decfsz	??_main,f
   322  07DB  2FDA               	goto	u47
   323  07DC  0BF2               	decfsz	??_main+1,f
   324  07DD  2FDA               	goto	u47
   325  07DE  0BF3               	decfsz	??_main+2,f
   326  07DF  2FDA               	goto	u47
   327  07E0  2FE1               	nop2
   328                           
   329                           ;main.c: 46:         }
   330  07E1  2FF4               	goto	l681
   331  07E2                     l48:	
   332                           ;main.c: 48:         else if (RB1)
   333                           
   334  07E2  1C86               	btfss	6,1	;volatile
   335  07E3  2FE5               	goto	u21
   336  07E4  2FE6               	goto	u20
   337  07E5                     u21:
   338  07E5  2FE9               	goto	l50
   339  07E6                     u20:
   340  07E6                     l673:
   341                           
   342                           ;main.c: 49:         {;main.c: 50:              Data--;
   343  07E6  3001               	movlw	1
   344  07E7  02F4               	subwf	main@Data,f
   345  07E8  2FD4               	goto	l671
   346  07E9                     l50:	
   347                           ;main.c: 54:         else if (RB2)
   348                           
   349  07E9  1D06               	btfss	6,2	;volatile
   350  07EA  2FEC               	goto	u31
   351  07EB  2FED               	goto	u30
   352  07EC                     u31:
   353  07EC  2FF4               	goto	l681
   354  07ED                     u30:
   355  07ED                     l677:
   356                           
   357                           ;main.c: 55:         {;main.c: 56:             SPI_MASTER_WRITE(Data);
   358  07ED  0874               	movf	main@Data,w
   359  07EE  120A  118A  27A8  120A  118A  	fcall	_SPI_MASTER_WRITE
   360  07F3  2FD4               	goto	l671
   361  07F4                     l681:
   362                           
   363                           ;main.c: 59:         PORTD = Data;
   364  07F4  0874               	movf	main@Data,w
   365  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   366  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   367  07F7  0088               	movwf	8	;volatile
   368  07F8  2FCC               	goto	l667
   369  07F9  120A  118A  2800   	ljmp	start
   370  07FC                     __end_of_main:
   371                           
   372                           	psect	text1
   373  07A8                     __ptext1:	
   374 ;; *************** function _SPI_MASTER_WRITE *****************
   375 ;; Defined at:
   376 ;;		line 103 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  data            1    wreg     unsigned char 
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  data            1    0[COMMON] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         1       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         1       0       0       0       0
   394 ;;Total ram usage:        1 bytes
   395 ;; Hardware stack levels used: 1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403  07A8                     _SPI_MASTER_WRITE:	
   404                           ;psect for function _SPI_MASTER_WRITE
   405                           
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _SPI_MASTER_WRITE: [wreg]
   409                           ;SPI_MASTER_WRITE@data stored from wreg
   410  07A8  00F0               	movwf	SPI_MASTER_WRITE@data
   411  07A9                     l655:
   412                           
   413                           ;main.c: 103: void SPI_MASTER_WRITE(uint8_t data);main.c: 104: {;main.c: 105:     SSPBUF
      +                           = data;
   414  07A9  0870               	movf	SPI_MASTER_WRITE@data,w
   415  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   416  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   417  07AC  0093               	movwf	19	;volatile
   418  07AD                     l61:
   419  07AD  0008               	return
   420  07AE                     __end_of_SPI_MASTER_WRITE:
   421                           
   422                           	psect	text2
   423  07AE                     __ptext2:	
   424 ;; *************** function _SPI_MASTER_INIT *****************
   425 ;; Defined at:
   426 ;;		line 67 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		None
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453  07AE                     _SPI_MASTER_INIT:	
   454                           ;psect for function _SPI_MASTER_INIT
   455                           
   456  07AE                     l653:	
   457                           ;incstack = 0
   458                           ; Regs used in _SPI_MASTER_INIT: []
   459                           
   460                           
   461                           ;main.c: 70:     SSPM0 = 0;
   462  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   463  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   464  07B0  1014               	bcf	20,0	;volatile
   465                           
   466                           ;main.c: 71:     SSPM1 = 0;
   467  07B1  1094               	bcf	20,1	;volatile
   468                           
   469                           ;main.c: 72:     SSPM2 = 0;
   470  07B2  1114               	bcf	20,2	;volatile
   471                           
   472                           ;main.c: 73:     SSPM3 = 0;
   473  07B3  1194               	bcf	20,3	;volatile
   474                           
   475                           ;main.c: 76:     SSPEN = 1;
   476  07B4  1694               	bsf	20,5	;volatile
   477                           
   478                           ;main.c: 79:     CKP = 0;
   479  07B5  1214               	bcf	20,4	;volatile
   480                           
   481                           ;main.c: 80:     CKE = 0;
   482  07B6  1683               	bsf	3,5	;RP0=1, select bank1
   483  07B7  1303               	bcf	3,6	;RP1=0, select bank1
   484  07B8  1314               	bcf	20,6	;volatile
   485                           
   486                           ;main.c: 83:     SMP = 0;
   487  07B9  1394               	bcf	20,7	;volatile
   488                           
   489                           ;main.c: 86:     TRISC5 = 0;
   490  07BA  1287               	bcf	7,5	;volatile
   491                           
   492                           ;main.c: 87:     TRISC4 = 1;
   493  07BB  1607               	bsf	7,4	;volatile
   494                           
   495                           ;main.c: 88:     TRISC3 = 0;
   496  07BC  1187               	bcf	7,3	;volatile
   497  07BD                     l58:
   498  07BD  0008               	return
   499  07BE                     __end_of_SPI_MASTER_INIT:
   500  007E                     btemp	set	126	;btemp
   501  007E                     wtemp0	set	126
   502                           
   503                           	psect	idloc
   504                           
   505                           ;Config register IDLOC0 @ 0x2000
   506                           ;	unspecified, using default values
   507  2000                     	org	8192
   508  2000  3FFF               	dw	16383
   509                           
   510                           ;Config register IDLOC1 @ 0x2001
   511                           ;	unspecified, using default values
   512  2001                     	org	8193
   513  2001  3FFF               	dw	16383
   514                           
   515                           ;Config register IDLOC2 @ 0x2002
   516                           ;	unspecified, using default values
   517  2002                     	org	8194
   518  2002  3FFF               	dw	16383
   519                           
   520                           ;Config register IDLOC3 @ 0x2003
   521                           ;	unspecified, using default values
   522  2003                     	org	8195
   523  2003  3FFF               	dw	16383
   524                           
   525                           	psect	config
   526                           
   527                           ;Config register CONFIG @ 0x2007
   528                           ;	Oscillator Selection bits
   529                           ;	FOSC = XT, XT oscillator
   530                           ;	Watchdog Timer Enable bit
   531                           ;	WDTE = OFF, WDT disabled
   532                           ;	Power-up Timer Enable bit
   533                           ;	PWRTE = ON, PWRT enabled
   534                           ;	Brown-out Reset Enable bit
   535                           ;	BOREN = ON, BOR enabled
   536                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   537                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   538                           ;	Data EEPROM Memory Code Protection bit
   539                           ;	CPD = OFF, Data EEPROM code protection off
   540                           ;	Flash Program Memory Write Enable bits
   541                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   542                           ;	In-Circuit Debugger Mode bit
   543                           ;	DEBUG = 0x1, unprogrammed default
   544                           ;	Flash Program Memory Code Protection bit
   545                           ;	CP = OFF, Code protection off
   546  2007                     	org	8199
   547  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_MASTER_WRITE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                    _SPI_MASTER_INIT
                   _SPI_MASTER_WRITE
 ---------------------------------------------------------------------------------
 (1) _SPI_MASTER_WRITE                                     1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_MASTER_INIT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_MASTER_INIT
   _SPI_MASTER_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Aug 22 01:42:51 2022

                      l50 07E9                        l61 07AD                        l48 07E2  
                      l58 07BD                        u10 07D0                        u11 07CF  
                      u20 07E6                        u21 07E5                        u30 07ED  
                      u31 07EC                        u47 07DA                       l653 07AE  
                     l661 07C4                       l655 07A9                       l671 07D4  
                     l663 07C8                       l673 07E6                       l681 07F4  
                     l665 07C9                       l657 07BE                       l667 07CC  
                     l659 07C3                       l677 07ED                       l669 07D0  
                     _CKE 04A6                       _CKP 00A4                       _RB0 0030  
                     _RB1 0031                       _RB2 0032                       _SMP 04A7  
                    _main 07BE                      btemp 007E                      start 0000  
                   ?_main 0070                     _PORTD 0008                     _SSPM0 00A0  
                   _SSPM1 00A1                     _SSPM2 00A2                     _SSPM3 00A3  
                   _TRISB 0086                     _TRISD 0088                     _SSPEN 00A5  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0071                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPBUF 0013  
    SPI_MASTER_WRITE@data 0070  __end_of_SPI_MASTER_WRITE 07AE         ??_SPI_MASTER_INIT 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 07BE  
                 __ptext1 07A8                   __ptext2 07AE      end_of_initialization 07FC  
       ?_SPI_MASTER_WRITE 0070        ??_SPI_MASTER_WRITE 0070           _SPI_MASTER_INIT 07AE  
     start_initialization 07FC   __end_of_SPI_MASTER_INIT 07BE                 ___latbits 0002  
        ?_SPI_MASTER_INIT 0070                  main@Data 0074          _SPI_MASTER_WRITE 07A8  
