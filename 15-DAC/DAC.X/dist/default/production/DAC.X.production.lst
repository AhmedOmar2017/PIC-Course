

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Aug 24 23:51:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171  07AB                     __pidataBANK0:
   172                           
   173                           ;initializer for _Sin_table
   174  07AB  3480               	retlw	128
   175  07AC  3498               	retlw	152
   176  07AD  34B0               	retlw	176
   177  07AE  34C6               	retlw	198
   178  07AF  34DA               	retlw	218
   179  07B0  34EA               	retlw	234
   180  07B1  34F5               	retlw	245
   181  07B2  34FD               	retlw	253
   182  07B3  34FF               	retlw	255
   183  07B4  34FD               	retlw	253
   184  07B5  34F5               	retlw	245
   185  07B6  34EA               	retlw	234
   186  07B7  34DA               	retlw	218
   187  07B8  34C6               	retlw	198
   188  07B9  34B0               	retlw	176
   189  07BA  3498               	retlw	152
   190  07BB  3480               	retlw	128
   191  07BC  3467               	retlw	103
   192  07BD  344F               	retlw	79
   193  07BE  3439               	retlw	57
   194  07BF  3425               	retlw	37
   195  07C0  3415               	retlw	21
   196  07C1  340A               	retlw	10
   197  07C2  3402               	retlw	2
   198  07C3  3400               	retlw	0
   199  07C4  3402               	retlw	2
   200  07C5  340A               	retlw	10
   201  07C6  3415               	retlw	21
   202  07C7  3425               	retlw	37
   203  07C8  3439               	retlw	57
   204  07C9  344F               	retlw	79
   205  07CA  3467               	retlw	103
   206  07CB  3480               	retlw	128
   207  001E                     _ADRESH	set	30
   208  001F                     _ADCON0bits	set	31
   209  001F                     _ADCON0	set	31
   210  0006                     _PORTB	set	6
   211  00FA                     _GO_DONE	set	250
   212  009E                     _ADRESL	set	158
   213  009F                     _ADCON1	set	159
   214  0086                     _TRISB	set	134
   215                           
   216                           	psect	cinit
   217  07EE                     start_initialization:	
   218                           ; #config settings
   219                           
   220  07EE                     __initialization:
   221                           
   222                           ; Initialize objects allocated to BANK0
   223  07EE  1383               	bcf	3,7	;select IRP bank0
   224  07EF  3041               	movlw	low (__pdataBANK0+33)
   225  07F0  00FD               	movwf	btemp+-1
   226  07F1  3007               	movlw	high __pidataBANK0
   227  07F2  00FE               	movwf	btemp
   228  07F3  30AB               	movlw	low __pidataBANK0
   229  07F4  00FF               	movwf	btemp+1
   230  07F5  3020               	movlw	low __pdataBANK0
   231  07F6  0084               	movwf	4
   232  07F7  120A  118A  279C  120A  118A  	fcall	init_ram0
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2FCC   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	dataBANK0
   241  0020                     __pdataBANK0:
   242  0020                     _Sin_table:
   243  0020                     	ds	33
   244                           
   245                           	psect	inittext
   246  0798                     init_fetch0:	
   247                           ;	Called with low address in FSR and high address in W
   248                           
   249  0798  087E               	movf	btemp,w
   250  0799  008A               	movwf	10
   251  079A  087F               	movf	btemp+1,w
   252  079B  0082               	movwf	2
   253  079C                     init_ram0:	
   254                           ;Called with:
   255                           ;	high address of idata address in btemp 
   256                           ;	low address of idata address in btemp+1 
   257                           ;	low address of data in FSR
   258                           ;	high address + 1 of data in btemp-1
   259                           
   260  079C  120A  118A  2798  120A  118A  	fcall	init_fetch0
   261  07A1  0080               	movwf	0
   262  07A2  0A84               	incf	4,f
   263  07A3  0804               	movf	4,w
   264  07A4  067D               	xorwf	btemp+-1,w
   265  07A5  1903               	btfsc	3,2
   266  07A6  3400               	retlw	0
   267  07A7  0AFF               	incf	btemp+1,f
   268  07A8  1903               	btfsc	3,2
   269  07A9  0AFE               	incf	btemp,f
   270  07AA  2F9C               	goto	init_ram0
   271                           
   272                           	psect	cstackCOMMON
   273  0070                     __pcstackCOMMON:
   274  0070                     ?_main:
   275  0070                     ??_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280  0070                     	ds	1
   281  0071                     main@i:
   282                           
   283                           ; 1 bytes @ 0x1
   284  0071                     	ds	1
   285                           
   286                           	psect	maintext
   287  07CC                     __pmaintext:	
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 37 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  i               1    1[COMMON] unsigned char 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         1       0       0       0       0
   309 ;;      Temps:          1       0       0       0       0
   310 ;;      Totals:         2       0       0       0       0
   311 ;;Total ram usage:        2 bytes
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319  07CC                     _main:	
   320                           ;psect for function _main
   321                           
   322  07CC                     l631:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   325                           
   326                           
   327                           ;main.c: 97:           TRISB = 0x00;
   328  07CC  1683               	bsf	3,5	;RP0=1, select bank1
   329  07CD  1303               	bcf	3,6	;RP1=0, select bank1
   330  07CE  0186               	clrf	6	;volatile
   331                           
   332                           ;main.c: 98:          PORTB = 0x00;
   333  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   334  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   335  07D1  0186               	clrf	6	;volatile
   336                           
   337                           ;main.c: 99:          uint8_t i = 0;
   338  07D2  01F1               	clrf	main@i
   339  07D3                     l633:
   340                           
   341                           ;main.c: 101:          {;main.c: 102:              PORTB = Sin_table[i++];
   342  07D3  0871               	movf	main@i,w
   343  07D4  3E20               	addlw	(low (_Sin_table| 0))& (0+255)
   344  07D5  0084               	movwf	4
   345  07D6  1383               	bcf	3,7	;select IRP bank0
   346  07D7  0800               	movf	0,w
   347  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   348  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   349  07DA  0086               	movwf	6	;volatile
   350  07DB                     l635:
   351  07DB  3001               	movlw	1
   352  07DC  00F0               	movwf	??_main
   353  07DD  0870               	movf	??_main,w
   354  07DE  07F1               	addwf	main@i,f
   355  07DF                     l637:
   356                           
   357                           ;main.c: 103:              _delay((unsigned long)((625)*(4000000/4000000.0)));
   358  07DF  30D0               	movlw	208
   359  07E0  00F0               	movwf	??_main
   360  07E1                     u57:
   361  07E1  0BF0               	decfsz	??_main,f
   362  07E2  2FE1               	goto	u57
   363  07E3                     l639:
   364                           
   365                           ;main.c: 104:              if(i == 33)
   366  07E3  3021               	movlw	33
   367  07E4  0671               	xorwf	main@i,w
   368  07E5  1D03               	btfss	3,2
   369  07E6  2FE8               	goto	u11
   370  07E7  2FE9               	goto	u10
   371  07E8                     u11:
   372  07E8  2FD3               	goto	l633
   373  07E9                     u10:
   374  07E9                     l641:
   375                           
   376                           ;main.c: 105:              {;main.c: 106:                  i = 0;
   377  07E9  01F1               	clrf	main@i
   378  07EA  2FD3               	goto	l633
   379  07EB  120A  118A  2800   	ljmp	start
   380  07EE                     __end_of_main:
   381  007E                     btemp	set	126	;btemp
   382  007E                     wtemp0	set	126
   383                           
   384                           	psect	idloc
   385                           
   386                           ;Config register IDLOC0 @ 0x2000
   387                           ;	unspecified, using default values
   388  2000                     	org	8192
   389  2000  3FFF               	dw	16383
   390                           
   391                           ;Config register IDLOC1 @ 0x2001
   392                           ;	unspecified, using default values
   393  2001                     	org	8193
   394  2001  3FFF               	dw	16383
   395                           
   396                           ;Config register IDLOC2 @ 0x2002
   397                           ;	unspecified, using default values
   398  2002                     	org	8194
   399  2002  3FFF               	dw	16383
   400                           
   401                           ;Config register IDLOC3 @ 0x2003
   402                           ;	unspecified, using default values
   403  2003                     	org	8195
   404  2003  3FFF               	dw	16383
   405                           
   406                           	psect	config
   407                           
   408                           ;Config register CONFIG @ 0x2007
   409                           ;	Oscillator Selection bits
   410                           ;	FOSC = XT, XT oscillator
   411                           ;	Watchdog Timer Enable bit
   412                           ;	WDTE = OFF, WDT disabled
   413                           ;	Power-up Timer Enable bit
   414                           ;	PWRTE = ON, PWRT enabled
   415                           ;	Brown-out Reset Enable bit
   416                           ;	BOREN = ON, BOR enabled
   417                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   418                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   419                           ;	Data EEPROM Memory Code Protection bit
   420                           ;	CPD = OFF, Data EEPROM code protection off
   421                           ;	Flash Program Memory Write Enable bits
   422                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   423                           ;	In-Circuit Debugger Mode bit
   424                           ;	DEBUG = 0x1, unprogrammed default
   425                           ;	Flash Program Memory Code Protection bit
   426                           ;	CP = OFF, Code protection off
   427  2007                     	org	8199
   428  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      21       5       41.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       2       1       14.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Aug 24 23:51:12 2022

                      pc 0002                       u10 07E9                       u11 07E8  
                     u57 07E1                       fsr 0004                      l631 07CC  
                    l641 07E9                      l633 07D3                      l635 07DB  
                    l637 07DF                      l639 07E3                      fsr0 0004  
                    indf 0000                     _main 07CC                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 0071                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 07AB  
             __pmaintext 07CC                  _GO_DONE 00FA     end_of_initialization 07FC  
    start_initialization 07EE                _Sin_table 0020               init_fetch0 0798  
            __pdataBANK0 0020                ___latbits 0002               _ADCON0bits 001F  
               init_ram0 079C  
