

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Aug 02 10:54:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  000B                     _INTCONbits	set	11
   169  0008                     _PORTD	set	8
   170  0030                     _RB0	set	48
   171  0033                     _RB3	set	51
   172  0032                     _RB2	set	50
   173  0031                     _RB1	set	49
   174  0088                     _TRISD	set	136
   175  0086                     _TRISB	set	134
   176  010C                     _EEDATA	set	268
   177  010D                     _EEADR	set	269
   178  018D                     _EECON2	set	397
   179  018C                     _EECON1bits	set	396
   180                           
   181                           	psect	cinit
   182  07FC                     start_initialization:	
   183                           ; #config settings
   184                           
   185  07FC                     __initialization:
   186  07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  07FC                     __end_of__initialization:
   190  07FC  0183               	clrf	3
   191  07FD  120A  118A  2F85   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	cstackCOMMON
   194  0070                     __pcstackCOMMON:
   195  0070                     ?_EEPROM_WR:
   196  0070                     ?_EEPROM_RD:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ??_EEPROM_RD:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     EEPROM_WR@DATA:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     EEPROM_RD@ADR:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           ; 1 bytes @ 0x0
   213  0070                     	ds	1
   214  0071                     ??_EEPROM_WR:
   215  0071                     EEPROM_WR@ADR:	
   216                           ; 1 bytes @ 0x1
   217                           
   218                           
   219                           ; 1 bytes @ 0x1
   220  0071                     	ds	1
   221  0072                     ??_main:
   222                           
   223                           ; 1 bytes @ 0x2
   224  0072                     	ds	3
   225  0075                     main@i:
   226                           
   227                           ; 1 bytes @ 0x5
   228  0075                     	ds	1
   229  0076                     main@Adr:
   230                           
   231                           ; 1 bytes @ 0x6
   232  0076                     	ds	1
   233                           
   234                           	psect	maintext
   235  0785                     __pmaintext:	
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 24 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  i               1    5[COMMON] unsigned char 
   246 ;;  Adr             1    6[COMMON] unsigned char 
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         2       0       0       0       0
   258 ;;      Temps:          3       0       0       0       0
   259 ;;      Totals:         5       0       0       0       0
   260 ;;Total ram usage:        5 bytes
   261 ;; Hardware stack levels required when called: 1
   262 ;; This function calls:
   263 ;;		_EEPROM_RD
   264 ;;		_EEPROM_WR
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270  0785                     _main:	
   271                           ;psect for function _main
   272                           
   273  0785                     l742:	
   274                           ;incstack = 0
   275                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   276                           
   277                           
   278                           ;main.c: 26:     TRISB = 0x0F;
   279  0785  300F               	movlw	15
   280  0786  1683               	bsf	3,5	;RP0=1, select bank1
   281  0787  1303               	bcf	3,6	;RP1=0, select bank1
   282  0788  0086               	movwf	6	;volatile
   283  0789                     l744:
   284                           
   285                           ;main.c: 27:     TRISD = 0x00;
   286  0789  0188               	clrf	8	;volatile
   287  078A                     l746:
   288                           
   289                           ;main.c: 28:     PORTD = 0x00;
   290  078A  1283               	bcf	3,5	;RP0=0, select bank0
   291  078B  1303               	bcf	3,6	;RP1=0, select bank0
   292  078C  0188               	clrf	8	;volatile
   293  078D                     l748:
   294                           
   295                           ;main.c: 30:     uint8_t Adr = 0;
   296  078D  01F6               	clrf	main@Adr
   297  078E                     l750:
   298                           
   299                           ;main.c: 33:     {;main.c: 34:         if (RB1)
   300  078E  1283               	bcf	3,5	;RP0=0, select bank0
   301  078F  1303               	bcf	3,6	;RP1=0, select bank0
   302  0790  1C86               	btfss	6,1	;volatile
   303  0791  2F93               	goto	u91
   304  0792  2F94               	goto	u90
   305  0793                     u91:
   306  0793  2FAC               	goto	l36
   307  0794                     u90:
   308  0794                     l752:
   309                           
   310                           ;main.c: 35:         {;main.c: 36:             EEPROM_WR(Adr++, 3);
   311  0794  3003               	movlw	3
   312  0795  00F2               	movwf	??_main
   313  0796  0872               	movf	??_main,w
   314  0797  00F0               	movwf	EEPROM_WR@DATA
   315  0798  0876               	movf	main@Adr,w
   316  0799  120A  118A  276A  120A  118A  	fcall	_EEPROM_WR
   317  079E                     l754:
   318  079E  3001               	movlw	1
   319  079F  00F2               	movwf	??_main
   320  07A0  0872               	movf	??_main,w
   321  07A1  07F6               	addwf	main@Adr,f
   322  07A2                     l756:
   323                           
   324                           ;main.c: 37:             _delay((unsigned long)((100)*(4000000/4000.0)));
   325  07A2  3082               	movlw	130
   326  07A3  00F3               	movwf	??_main+1
   327  07A4  30DD               	movlw	221
   328  07A5  00F2               	movwf	??_main
   329  07A6                     u157:
   330  07A6  0BF2               	decfsz	??_main,f
   331  07A7  2FA6               	goto	u157
   332  07A8  0BF3               	decfsz	??_main+1,f
   333  07A9  2FA6               	goto	u157
   334  07AA  2FAB               	nop2
   335                           
   336                           ;main.c: 38:         }
   337  07AB  2FCA               	goto	l770
   338  07AC                     l36:	
   339                           ;main.c: 39:         else if (RB2)
   340                           
   341  07AC  1D06               	btfss	6,2	;volatile
   342  07AD  2FAF               	goto	u101
   343  07AE  2FB0               	goto	u100
   344  07AF                     u101:
   345  07AF  2FBB               	goto	l38
   346  07B0                     u100:
   347  07B0                     l758:
   348                           
   349                           ;main.c: 40:         {;main.c: 41:             EEPROM_WR(Adr++, 5);
   350  07B0  3005               	movlw	5
   351  07B1  00F2               	movwf	??_main
   352  07B2  0872               	movf	??_main,w
   353  07B3  00F0               	movwf	EEPROM_WR@DATA
   354  07B4  0876               	movf	main@Adr,w
   355  07B5  120A  118A  276A  120A  118A  	fcall	_EEPROM_WR
   356  07BA  2F9E               	goto	l754
   357  07BB                     l38:	
   358                           ;main.c: 44:         else if (RB3)
   359                           
   360  07BB  1D86               	btfss	6,3	;volatile
   361  07BC  2FBE               	goto	u111
   362  07BD  2FBF               	goto	u110
   363  07BE                     u111:
   364  07BE  2FCA               	goto	l770
   365  07BF                     u110:
   366  07BF                     l764:
   367                           
   368                           ;main.c: 45:         {;main.c: 46:             EEPROM_WR(Adr++, 7);
   369  07BF  3007               	movlw	7
   370  07C0  00F2               	movwf	??_main
   371  07C1  0872               	movf	??_main,w
   372  07C2  00F0               	movwf	EEPROM_WR@DATA
   373  07C3  0876               	movf	main@Adr,w
   374  07C4  120A  118A  276A  120A  118A  	fcall	_EEPROM_WR
   375  07C9  2F9E               	goto	l754
   376  07CA                     l770:
   377                           
   378                           ;main.c: 49:         if(Adr == 3) Adr = 0;
   379  07CA  3003               	movlw	3
   380  07CB  0676               	xorwf	main@Adr,w
   381  07CC  1D03               	btfss	3,2
   382  07CD  2FCF               	goto	u121
   383  07CE  2FD0               	goto	u120
   384  07CF                     u121:
   385  07CF  2FD1               	goto	l774
   386  07D0                     u120:
   387  07D0                     l772:
   388  07D0  01F6               	clrf	main@Adr
   389  07D1                     l774:
   390                           
   391                           ;main.c: 51:         if(RB0)
   392  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   393  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   394  07D3  1C06               	btfss	6,0	;volatile
   395  07D4  2FD6               	goto	u131
   396  07D5  2FD7               	goto	u130
   397  07D6                     u131:
   398  07D6  2F8E               	goto	l750
   399  07D7                     u130:
   400  07D7                     l776:
   401                           
   402                           ;main.c: 52:         {;main.c: 54:             for(uint8_t i =0;i < 3; i++)
   403  07D7  01F5               	clrf	main@i
   404  07D8                     l782:
   405                           
   406                           ;main.c: 55:             {;main.c: 56:                 PORTD = EEPROM_RD(i);
   407  07D8  0875               	movf	main@i,w
   408  07D9  120A  118A  275D  120A  118A  	fcall	_EEPROM_RD
   409  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   410  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   411  07E0  0088               	movwf	8	;volatile
   412  07E1                     l784:
   413                           
   414                           ;main.c: 57:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   415  07E1  3006               	movlw	6
   416  07E2  00F4               	movwf	??_main+2
   417  07E3  3013               	movlw	19
   418  07E4  00F3               	movwf	??_main+1
   419  07E5  30AD               	movlw	173
   420  07E6  00F2               	movwf	??_main
   421  07E7                     u167:
   422  07E7  0BF2               	decfsz	??_main,f
   423  07E8  2FE7               	goto	u167
   424  07E9  0BF3               	decfsz	??_main+1,f
   425  07EA  2FE7               	goto	u167
   426  07EB  0BF4               	decfsz	??_main+2,f
   427  07EC  2FE7               	goto	u167
   428  07ED  2FEE               	nop2
   429  07EE                     l786:
   430                           
   431                           ;main.c: 58:             }
   432  07EE  3001               	movlw	1
   433  07EF  00F2               	movwf	??_main
   434  07F0  0872               	movf	??_main,w
   435  07F1  07F5               	addwf	main@i,f
   436  07F2                     l788:
   437  07F2  3003               	movlw	3
   438  07F3  0275               	subwf	main@i,w
   439  07F4  1C03               	skipc
   440  07F5  2FF7               	goto	u141
   441  07F6  2FF8               	goto	u140
   442  07F7                     u141:
   443  07F7  2FD8               	goto	l782
   444  07F8                     u140:
   445  07F8  2F8E               	goto	l750
   446  07F9  120A  118A  2800   	ljmp	start
   447  07FC                     __end_of_main:
   448                           
   449                           	psect	text1
   450  076A                     __ptext1:	
   451 ;; *************** function _EEPROM_WR *****************
   452 ;; Defined at:
   453 ;;		line 65 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  ADR             1    wreg     unsigned char 
   456 ;;  DATA            1    0[COMMON] unsigned char 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  ADR             1    1[COMMON] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         1       0       0       0       0
   469 ;;      Locals:         1       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0
   471 ;;      Totals:         2       0       0       0       0
   472 ;;Total ram usage:        2 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481  076A                     _EEPROM_WR:	
   482                           ;psect for function _EEPROM_WR
   483                           
   484                           
   485                           ;incstack = 0
   486                           ; Regs used in _EEPROM_WR: [wreg]
   487                           ;EEPROM_WR@ADR stored from wreg
   488  076A  00F1               	movwf	EEPROM_WR@ADR
   489  076B                     l724:
   490  076B                     l50:	
   491                           ;main.c: 65: void EEPROM_WR(uint8_t ADR, uint8_t DATA);main.c: 66: {;main.c: 67:     whi
      +                          le(EECON1bits.WR);
   492                           
   493  076B  1683               	bsf	3,5	;RP0=1, select bank3
   494  076C  1703               	bsf	3,6	;RP1=1, select bank3
   495  076D  188C               	btfsc	12,1	;volsfr
   496  076E  2F70               	goto	u81
   497  076F  2F71               	goto	u80
   498  0770                     u81:
   499  0770  2F6B               	goto	l50
   500  0771                     u80:
   501  0771                     l726:
   502                           
   503                           ;main.c: 68:     EEADR = ADR;
   504  0771  0871               	movf	EEPROM_WR@ADR,w
   505  0772  1283               	bcf	3,5	;RP0=0, select bank2
   506  0773  1703               	bsf	3,6	;RP1=1, select bank2
   507  0774  008D               	movwf	13	;volatile
   508                           
   509                           ;main.c: 69:     EEDATA = DATA;
   510  0775  0870               	movf	EEPROM_WR@DATA,w
   511  0776  008C               	movwf	12	;volatile
   512  0777                     l728:
   513                           
   514                           ;main.c: 70:     EECON1bits.EEPGD = 0;
   515  0777  1683               	bsf	3,5	;RP0=1, select bank3
   516  0778  1703               	bsf	3,6	;RP1=1, select bank3
   517  0779  138C               	bcf	12,7	;volsfr
   518  077A                     l730:
   519                           
   520                           ;main.c: 71:     EECON1bits.WREN = 1;
   521  077A  150C               	bsf	12,2	;volsfr
   522  077B                     l732:
   523                           
   524                           ;main.c: 72:     INTCONbits.GIE = 0;
   525  077B  138B               	bcf	11,7	;volatile
   526                           
   527                           ;main.c: 73:     EECON2 = 0x55;
   528  077C  3055               	movlw	85
   529  077D  008D               	movwf	13	;volsfr
   530                           
   531                           ;main.c: 74:     EECON2 = 0xAA;
   532  077E  30AA               	movlw	170
   533  077F  008D               	movwf	13	;volsfr
   534  0780                     l734:
   535                           
   536                           ;main.c: 75:     EECON1bits.WR = 1;
   537  0780  148C               	bsf	12,1	;volsfr
   538  0781                     l736:
   539                           
   540                           ;main.c: 76:     INTCONbits.GIE = 1;
   541  0781  178B               	bsf	11,7	;volatile
   542  0782                     l738:
   543                           
   544                           ;main.c: 77:     EECON1bits.WREN = 0;
   545  0782  110C               	bcf	12,2	;volsfr
   546  0783                     l740:
   547                           
   548                           ;main.c: 78:     EECON1bits.WR = 0;
   549  0783  108C               	bcf	12,1	;volsfr
   550  0784                     l53:
   551  0784  0008               	return
   552  0785                     __end_of_EEPROM_WR:
   553                           
   554                           	psect	text2
   555  075D                     __ptext2:	
   556 ;; *************** function _EEPROM_RD *****************
   557 ;; Defined at:
   558 ;;		line 81 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  ADR             1    wreg     unsigned char 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  ADR             1    0[COMMON] unsigned char 
   563 ;;  DATA            1    0        unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      unsigned char 
   566 ;; Registers used:
   567 ;;		wreg, status,2
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         1       0       0       0       0
   577 ;;Total ram usage:        1 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586  075D                     _EEPROM_RD:	
   587                           ;psect for function _EEPROM_RD
   588                           
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _EEPROM_RD: [wreg+status,2]
   592                           ;EEPROM_RD@ADR stored from wreg
   593  075D  00F0               	movwf	EEPROM_RD@ADR
   594  075E                     l666:
   595  075E                     l668:
   596                           
   597                           ;main.c: 85:    EEADR = ADR;
   598  075E  0870               	movf	EEPROM_RD@ADR,w
   599  075F  1283               	bcf	3,5	;RP0=0, select bank2
   600  0760  1703               	bsf	3,6	;RP1=1, select bank2
   601  0761  008D               	movwf	13	;volatile
   602  0762                     l670:
   603                           
   604                           ;main.c: 86:    EECON1bits.EEPGD = 0;
   605  0762  1683               	bsf	3,5	;RP0=1, select bank3
   606  0763  1703               	bsf	3,6	;RP1=1, select bank3
   607  0764  138C               	bcf	12,7	;volsfr
   608  0765                     l672:
   609                           
   610                           ;main.c: 87:    EECON1bits.RD = 1;
   611  0765  140C               	bsf	12,0	;volsfr
   612  0766                     l674:
   613  0766  1283               	bcf	3,5	;RP0=0, select bank2
   614  0767  1703               	bsf	3,6	;RP1=1, select bank2
   615  0768  080C               	movf	12,w	;volatile
   616  0769                     l56:
   617  0769  0008               	return
   618  076A                     __end_of_EEPROM_RD:
   619  007E                     btemp	set	126	;btemp
   620  007E                     wtemp0	set	126
   621                           
   622                           	psect	idloc
   623                           
   624                           ;Config register IDLOC0 @ 0x2000
   625                           ;	unspecified, using default values
   626  2000                     	org	8192
   627  2000  3FFF               	dw	16383
   628                           
   629                           ;Config register IDLOC1 @ 0x2001
   630                           ;	unspecified, using default values
   631  2001                     	org	8193
   632  2001  3FFF               	dw	16383
   633                           
   634                           ;Config register IDLOC2 @ 0x2002
   635                           ;	unspecified, using default values
   636  2002                     	org	8194
   637  2002  3FFF               	dw	16383
   638                           
   639                           ;Config register IDLOC3 @ 0x2003
   640                           ;	unspecified, using default values
   641  2003                     	org	8195
   642  2003  3FFF               	dw	16383
   643                           
   644                           	psect	config
   645                           
   646                           ;Config register CONFIG @ 0x2007
   647                           ;	Oscillator Selection bits
   648                           ;	FOSC = XT, XT oscillator
   649                           ;	Watchdog Timer Enable bit
   650                           ;	WDTE = OFF, WDT disabled
   651                           ;	Power-up Timer Enable bit
   652                           ;	PWRTE = OFF, PWRT disabled
   653                           ;	Brown-out Reset Enable bit
   654                           ;	BOREN = ON, BOR enabled
   655                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   656                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   657                           ;	Data EEPROM Memory Code Protection bit
   658                           ;	CPD = OFF, Data EEPROM code protection off
   659                           ;	Flash Program Memory Write Enable bits
   660                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   661                           ;	In-Circuit Debugger Mode bit
   662                           ;	DEBUG = 0x1, unprogrammed default
   663                           ;	Flash Program Memory Code Protection bit
   664                           ;	CP = OFF, Code protection off
   665  2007                     	org	8199
   666  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EEPROM_WR

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     448
                                              2 COMMON     5     5      0
                          _EEPROM_RD
                          _EEPROM_WR
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WR                                            2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_RD                                            2     2      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_RD
   _EEPROM_WR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Aug 02 10:54:51 2022

                     l50 076B                       l36 07AC                       l53 0784  
                     l38 07BB                       l56 0769                       u80 0771  
                     u81 0770                       u90 0794                       u91 0793  
                    l730 077A                      l740 0783                      l732 077B  
                    l724 076B                      l670 0762                      l734 0780  
                    l726 0771                      l750 078E                      l742 0785  
                    l672 0765                      l736 0781                      l728 0777  
                    l752 0794                      l744 0789                      l674 0766  
                    l666 075E                      l738 0782                      l770 07CA  
                    l754 079E                      l746 078A                      l668 075E  
                    l772 07D0                      l764 07BF                      l756 07A2  
                    l748 078D                      l782 07D8                      l774 07D1  
                    l758 07B0                      l784 07E1                      l776 07D7  
                    l786 07EE                      l788 07F2                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    u100 07B0                      u101 07AF                      u110 07BF  
                    u111 07BE                      u120 07D0                      u121 07CF  
                    u130 07D7                      u131 07D6                      u140 07F8  
                    u141 07F7                      u157 07A6                      u167 07E7  
                   _main 0785                     btemp 007E                     start 0000  
                  ?_main 0070                    _EEADR 010D                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    main@i 0075  
                  status 0003                    wtemp0 007E        __end_of_EEPROM_RD 076A  
        __initialization 07FC        __end_of_EEPROM_WR 0785             __end_of_main 07FC  
                 ??_main 0072                   _EEDATA 010C                   _EECON2 018D  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0785  
              _EEPROM_RD 075D                _EEPROM_WR 076A                  __ptext1 076A  
                __ptext2 075D                  main@Adr 0076     end_of_initialization 07FC  
          EEPROM_WR@DATA 0070               ?_EEPROM_RD 0070               ?_EEPROM_WR 0070  
    start_initialization 07FC              ??_EEPROM_RD 0070              ??_EEPROM_WR 0071  
              ___latbits 0002             EEPROM_RD@ADR 0070             EEPROM_WR@ADR 0071  
             _EECON1bits 018C               _INTCONbits 000B  
