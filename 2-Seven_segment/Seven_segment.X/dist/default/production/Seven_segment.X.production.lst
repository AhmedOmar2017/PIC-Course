

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 10 17:17:08 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  078F                     __pidataBANK0:
   173                           
   174                           ;initializer for main@F879
   175  078F  34FC               	retlw	252
   176  0790  3460               	retlw	96
   177  0791  34DA               	retlw	218
   178  0792  34F2               	retlw	242
   179  0793  3466               	retlw	102
   180  0794  34B6               	retlw	182
   181  0795  34BE               	retlw	190
   182  0796  34E0               	retlw	224
   183  0797  34FF               	retlw	255
   184  0798  34F6               	retlw	246
   185  0006                     _PORTB	set	6
   186  0086                     _TRISB	set	134
   187                           
   188                           	psect	cinit
   189  07EE                     start_initialization:	
   190                           ; #config settings
   191                           
   192  07EE                     __initialization:
   193                           
   194                           ; Initialize objects allocated to BANK0
   195  07EE  1383               	bcf	3,7	;select IRP bank0
   196  07EF  3035               	movlw	low (__pdataBANK0+10)
   197  07F0  00FD               	movwf	btemp+-1
   198  07F1  3007               	movlw	high __pidataBANK0
   199  07F2  00FE               	movwf	btemp
   200  07F3  308F               	movlw	low __pidataBANK0
   201  07F4  00FF               	movwf	btemp+1
   202  07F5  302B               	movlw	low __pdataBANK0
   203  07F6  0084               	movwf	4
   204  07F7  120A  118A  279D  120A  118A  	fcall	init_ram0
   205  07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  07FC                     __end_of__initialization:
   209  07FC  0183               	clrf	3
   210  07FD  120A  118A  2FAC   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	dataBANK0
   213  002B                     __pdataBANK0:
   214  002B                     main@F879:
   215  002B                     	ds	10
   216                           
   217                           	psect	inittext
   218  0799                     init_fetch0:	
   219                           ;	Called with low address in FSR and high address in W
   220                           
   221  0799  087E               	movf	btemp,w
   222  079A  008A               	movwf	10
   223  079B  087F               	movf	btemp+1,w
   224  079C  0082               	movwf	2
   225  079D                     init_ram0:	
   226                           ;Called with:
   227                           ;	high address of idata address in btemp 
   228                           ;	low address of idata address in btemp+1 
   229                           ;	low address of data in FSR
   230                           ;	high address + 1 of data in btemp-1
   231                           
   232  079D  120A  118A  2799  120A  118A  	fcall	init_fetch0
   233  07A2  0080               	movwf	0
   234  07A3  0A84               	incf	4,f
   235  07A4  0804               	movf	4,w
   236  07A5  067D               	xorwf	btemp+-1,w
   237  07A6  1903               	btfsc	3,2
   238  07A7  3400               	retlw	0
   239  07A8  0AFF               	incf	btemp+1,f
   240  07A9  1903               	btfsc	3,2
   241  07AA  0AFE               	incf	btemp,f
   242  07AB  2F9D               	goto	init_ram0
   243                           
   244                           	psect	cstackCOMMON
   245  0070                     __pcstackCOMMON:
   246  0070                     ?_main:
   247  0070                     ??_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	4
   253                           
   254                           	psect	cstackBANK0
   255  0020                     __pcstackBANK0:
   256  0020                     main@segment_code:
   257                           
   258                           ; 10 bytes @ 0x0
   259  0020                     	ds	10
   260  002A                     main@counter:
   261                           
   262                           ; 1 bytes @ 0xA
   263  002A                     	ds	1
   264                           
   265                           	psect	maintext
   266  07AC                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 14 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  segment_code   10    0[BANK0 ] unsigned char [10]
   277 ;;  counter         1   10[BANK0 ] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0      11       0       0       0
   289 ;;      Temps:          4       0       0       0       0
   290 ;;      Totals:         4      11       0       0       0
   291 ;;Total ram usage:       15 bytes
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299  07AC                     _main:	
   300                           ;psect for function _main
   301                           
   302  07AC                     l627:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   305                           
   306                           
   307                           ;main.c: 16:     unsigned char segment_code[10] = {0xFC, 0x60, 0xDA, 0xF2, 0x66, 0xB6, 0
      +                          xBE, 0xE0, 0xFF, 0xF6};
   308  07AC  3020               	movlw	main@segment_code& (0+255)
   309  07AD  0084               	movwf	4
   310  07AE  302B               	movlw	low main@F879
   311  07AF  00F0               	movwf	??_main
   312  07B0  0804               	movf	4,w
   313  07B1  00F1               	movwf	??_main+1
   314  07B2  300A               	movlw	10
   315  07B3  00F2               	movwf	??_main+2
   316  07B4                     u30:
   317  07B4  0870               	movf	??_main,w
   318  07B5  0084               	movwf	4
   319  07B6  1383               	bcf	3,7	;select IRP bank0
   320  07B7  0800               	movf	0,w
   321  07B8  00F3               	movwf	??_main+3
   322  07B9  0AF0               	incf	??_main,f
   323  07BA  0871               	movf	??_main+1,w
   324  07BB  0084               	movwf	4
   325  07BC  0873               	movf	??_main+3,w
   326  07BD  0080               	movwf	0
   327  07BE  0AF1               	incf	??_main+1,f
   328  07BF  0BF2               	decfsz	??_main+2,f
   329  07C0  2FB4               	goto	u30
   330  07C1                     l629:
   331                           
   332                           ;main.c: 17:     unsigned char counter = 0;
   333  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   334  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   335  07C3  01AA               	clrf	main@counter
   336  07C4                     l631:
   337                           
   338                           ;main.c: 19:     TRISB = 0x00;
   339  07C4  1683               	bsf	3,5	;RP0=1, select bank1
   340  07C5  1303               	bcf	3,6	;RP1=0, select bank1
   341  07C6  0186               	clrf	6	;volatile
   342  07C7                     l633:
   343                           
   344                           ;main.c: 20:     PORTB = 0x00;
   345  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   346  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   347  07C9  0186               	clrf	6	;volatile
   348  07CA                     l635:
   349                           
   350                           ;main.c: 24:     {;main.c: 25:         PORTB = segment_code[counter];
   351  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   352  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   353  07CC  082A               	movf	main@counter,w
   354  07CD  3E20               	addlw	(low (main@segment_code| 0))& (0+255)
   355  07CE  0084               	movwf	4
   356  07CF  1383               	bcf	3,7	;select IRP bank0
   357  07D0  0800               	movf	0,w
   358  07D1  0086               	movwf	6	;volatile
   359  07D2                     l637:
   360                           
   361                           ;main.c: 26:         counter++;
   362  07D2  3001               	movlw	1
   363  07D3  00F0               	movwf	??_main
   364  07D4  0870               	movf	??_main,w
   365  07D5  07AA               	addwf	main@counter,f
   366  07D6                     l639:
   367                           
   368                           ;main.c: 27:         if (counter == 10) counter = 0;
   369  07D6  300A               	movlw	10
   370  07D7  062A               	xorwf	main@counter,w
   371  07D8  1D03               	btfss	3,2
   372  07D9  2FDB               	goto	u41
   373  07DA  2FDC               	goto	u40
   374  07DB                     u41:
   375  07DB  2FDD               	goto	l643
   376  07DC                     u40:
   377  07DC                     l641:
   378  07DC  01AA               	clrf	main@counter
   379  07DD                     l643:
   380                           
   381                           ;main.c: 28:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   382  07DD  3006               	movlw	6
   383  07DE  00F2               	movwf	??_main+2
   384  07DF  3013               	movlw	19
   385  07E0  00F1               	movwf	??_main+1
   386  07E1  30AD               	movlw	173
   387  07E2  00F0               	movwf	??_main
   388  07E3                     u57:
   389  07E3  0BF0               	decfsz	??_main,f
   390  07E4  2FE3               	goto	u57
   391  07E5  0BF1               	decfsz	??_main+1,f
   392  07E6  2FE3               	goto	u57
   393  07E7  0BF2               	decfsz	??_main+2,f
   394  07E8  2FE3               	goto	u57
   395  07E9  2FEA               	nop2
   396  07EA  2FCA               	goto	l635
   397  07EB  120A  118A  2800   	ljmp	start
   398  07EE                     __end_of_main:
   399  007E                     btemp	set	126	;btemp
   400  007E                     wtemp0	set	126
   401                           
   402                           	psect	idloc
   403                           
   404                           ;Config register IDLOC0 @ 0x2000
   405                           ;	unspecified, using default values
   406  2000                     	org	8192
   407  2000  3FFF               	dw	16383
   408                           
   409                           ;Config register IDLOC1 @ 0x2001
   410                           ;	unspecified, using default values
   411  2001                     	org	8193
   412  2001  3FFF               	dw	16383
   413                           
   414                           ;Config register IDLOC2 @ 0x2002
   415                           ;	unspecified, using default values
   416  2002                     	org	8194
   417  2002  3FFF               	dw	16383
   418                           
   419                           ;Config register IDLOC3 @ 0x2003
   420                           ;	unspecified, using default values
   421  2003                     	org	8195
   422  2003  3FFF               	dw	16383
   423                           
   424                           	psect	config
   425                           
   426                           ;Config register CONFIG @ 0x2007
   427                           ;	Oscillator Selection bits
   428                           ;	FOSC = XT, XT oscillator
   429                           ;	Watchdog Timer Enable bit
   430                           ;	WDTE = OFF, WDT disabled
   431                           ;	Power-up Timer Enable bit
   432                           ;	PWRTE = ON, PWRT enabled
   433                           ;	Brown-out Reset Enable bit
   434                           ;	BOREN = ON, BOR enabled
   435                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   436                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   437                           ;	Data EEPROM Memory Code Protection bit
   438                           ;	CPD = OFF, Data EEPROM code protection off
   439                           ;	Flash Program Memory Write Enable bits
   440                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   441                           ;	In-Circuit Debugger Mode bit
   442                           ;	DEBUG = 0x1, unprogrammed default
   443                           ;	Flash Program Memory Code Protection bit
   444                           ;	CP = OFF, Code protection off
   445  2007                     	org	8199
   446  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0      71
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 10 17:17:08 2022

                      pc 0002                       u30 07B4                       u40 07DC  
                     u41 07DB                       u57 07E3                       fsr 0004  
                    l631 07C4                      l641 07DC                      l633 07C7  
                    l643 07DD                      l635 07CA                      l627 07AC  
                    l637 07D2                      l629 07C1                      l639 07D6  
                    fsr0 0004                      indf 0000              main@counter 002A  
                   _main 07AC                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 078F  
             __pmaintext 07AC     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0799              __pdataBANK0 002B                ___latbits 0002  
          __pcstackBANK0 0020         main@segment_code 0020                 main@F879 002B  
               init_ram0 079D  
